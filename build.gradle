buildscript {
    ext {
        kotlinVersion = '1.3.0'
        sonarqubeVersion = '2.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonarqubeVersion"
    }
}

plugins {
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

ext {
    versions = ext {
        kotlin = '1.3.0'
        junit = '5.1.0'
        kotlintest = '3.1.10'

        slf4j = '1.7.25'
        jackson = '2.9.7'
        jayway = '2.4.0'

        carbon = ext {
            validator = '0.1'
        }
    }
}

allprojects {
    group = 'org.carbon.libs'

    repositories {
        mavenCentral()
    }
}

subprojects {

    apply plugin: 'kotlin'

    sourceCompatibility = 1.8

    sourceSets {
        main {
            kotlin {
                srcDirs += 'src/main/kotlin'
            }
        }
        test {
            kotlin {
                srcDirs += 'src/tet/kotlin'
            }
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.junit"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$versions.junit"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junit"

        testImplementation "io.kotlintest:kotlintest-runner-junit5:$versions.kotlintest"
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }

    task sourceJar(type: Jar) {
        classifier "sources"
        from sourceSets.main.allSource
    }
}

apply from: 'build.publish.gradle'
apply from: 'build.coverage.gradle'
apply from: 'build.quality.gradle'