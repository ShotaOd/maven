buildscript {
    ext {
        versions = ext {
            // ci
            sonarqube = '2.6'
            coveralls = '2.8.2'
            kotlin = '1.3.11'
            junit = '5.3.2'
            kotlintest = '3.1.10'

            slf4j = '1.7.25'
            jackson = '2.9.7'
            jayway = '2.4.0'

            carbon = ext {
                validation = '0.4'
                kompose = '0.1.1'
            }
        }
        kotlinVersion = '1.3.0'
        sonarqubeVersion = '2.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$versions.sonarqube"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:$versions.coveralls"
    }
}

allprojects {
    group = 'org.carbon.libs'

    repositories {
        mavenCentral()
    }
}

subprojects {

    apply plugin: 'kotlin'

    sourceCompatibility = 1.8

    sourceSets {
        main {
            kotlin {
                srcDirs += 'src/main/kotlin'
            }
        }
        test {
            kotlin {
                srcDirs += 'src/tet/kotlin'
            }
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.junit"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$versions.junit"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junit"

        testImplementation "io.kotlintest:kotlintest-assertions:$versions.kotlintest"
        // with intellij not working
        // see: https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000013800-Unable-to-run-individual-KotlinTests-all-of-a-sudden
        // testImplementation "io.kotlintest:kotlintest-runner-junit5:$versions.kotlintest"
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            showStandardStreams = true
            exceptionFormat 'full'
        }
    }

    task sourceJar(type: Jar) {
        classifier "sources"
        from sourceSets.main.allSource
    }
}

apply from: 'build.publish.gradle'
apply from: 'build.coverage.gradle'
apply from: 'build.quality.gradle'